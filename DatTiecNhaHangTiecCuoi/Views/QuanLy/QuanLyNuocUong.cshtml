@using DatTiecNhaHangTiecCuoi.Models
@model List<NuocEntity>
@{
    ViewBag.Title = "QuanLyNuocUong";
    Layout = "~/Views/Shared/Layout_QuanLy.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
            border: none;
        }

        th, td {
            border-bottom: 2px solid;
            padding: 2px;
            text-align: center;
        }

            th:not(:last-child),
            td:not(:last-child) {
                border-right: 1px solid;
            }

            th:first-child,
            td:first-child {
                text-align: left; /* Canh trái cho cột 1 và cột 2 */
                width: 10%;
            }

            td:nth-child(2) {
                text-align: left; /* Canh trái cho cột 1 và cột 2 */
                width: 20%;
            }

            td:nth-child(3),
            td:nth-child(4) {
                width: 5%; /* Đặt tỷ lệ phần trăm cho từng ô td tại đây */
            }

            td:nth-child(5) {
                width: 1%;
            }


        th, td {
            text-align: center; /* Canh giữa cho title */
            border-top: 1px solid;
        }

        button {
            width: 50px; /* Đặt chiều rộng của nút là 100% */
            height: 30px;
            background-color: bisque;
            color: black;
        }
    </style>
</head>
<body>
    <div style="display: flex; justify-content: space-between; margin-bottom: 15px;">
        <h1 style="margin: 0;">Danh sách Nước Uống</h1>
        <button style="width: 10%" onclick="Add()">Thêm</button>
    </div>
    <hr />
    <table>
        <thead>
            <tr>
                <th>Mã Nước Uống</th>
                <th>Tên Nước Uống</th>
                <th>Đơn Vị Tính</th>
                <th>Đơn Giá</th>
                <th>Thao Tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var nc in Model)
            {
                <tr>
                    <td>@nc.MaNuoc</td>
                    <td>@nc.TenNuoc</td>
                    <td>@nc.DVT</td>
                    <td class="formatted-number gia">@nc.DonGia</td>
                    <td>
                        <table>
                            <tr>
                                <td style="border: none;">
                                    <button onclick="Edit('@nc.MaNuoc')">Sửa</button>
                                </td>
                                <td style="border: none;">
                                    <button onclick="Delete('@nc.MaNuoc')">Xóa</button>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script>
        function Edit(MaNuoc) {
            window.location.href = '/QuanLy/SuaNuoc?MaNuoc=' + MaNuoc;
        }

        function Add() {
            window.location.href = '/QuanLy/ThemNuoc';
        }

        function Delete(maNuoc) {
            var confirmDelete = confirm('Bạn có chắc muốn xóa nước này không?');
            if (confirmDelete) {
                // Sử dụng Ajax để gửi yêu cầu xóa
                $.ajax({
                    url: '/QuanLy/XoaNuocUong',
                    type: 'POST',
                    data: { maNuoc: maNuoc },
                    success: function (result) {
                        console.log(result);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
                location.reload();
            }
        }
    </script>
    <script>
        const numberElements = document.getElementsByClassName('formatted-number');

        Array.from(numberElements).forEach((element) => {
            const number = element.textContent;
            const formattedNumber = addThousandsSeparator(number);
            element.textContent = formattedNumber;
        });

        function addThousandsSeparator(number) {
            const parts = number.toString().split('.');
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, '.');
            return parts.join('.');
        }
    </script>
</body>
</html>









